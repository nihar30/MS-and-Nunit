name: .NET

env:
  VERSION: '3.1'
  SOLUTION_FILE_PATH: .
  #BUILD_CONFIGURATION: Release
  CONTINUE_ON_ERROR_SETUP: true
  CONTINUE_ON_ERROR: false

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core SDK ${{ env.VERSION }}
      uses: actions/setup-dotnet@v1.7.2
      continue-on-error: ${{ env.CONTINUE_ON_ERROR_SETUP }}
      with:
        dotnet-version: ${{ env.VERSION }}
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
      continue-on-error: ${{ env.CONTINUE_ON_ERROR_SETUP }}
      
    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
      
    - name: MS Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      run: msbuild /m /t:Rebuild ${{env.SOLUTION_FILE_PATH}}
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      
  tests:
    needs: build
    name: NUnit Testing
    runs-on: windows-latest
    steps:   
      - name: NUnit
        run: dotnet new nunit
      
      - name: add package Microsoft.NET.Test.Sdk
        run: dotnet add unit-testing-using-nunit.csproj package Microsoft.NET.Test.Sdk --version 16.10.0 
      
      - name: add package Nunit3TestAdapter
        run: dotnet add unit-testing-using-nunit.csproj package Nunit3TestAdapter
      
      - name: add package NUnit
        run: dotnet add unit-testing-using-nunit.csproj package NUnit
      
      - name: Nunit Test
        run: dotnet test unit-testing-using-nunit.sln
   
